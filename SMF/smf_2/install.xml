<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.simplemachines.org/xml/modification">
<modification xmlns="http://www.simplemachines.org/xml/modification" xmlns:smf="http://www.simplemachines.org/">
	<id>TapatalkSMFPlugin:TapatalkDevelopmentTeam</id>
	
	<file name="$sourcedir/Load.php">
		<operation>
			<search position="replace"><![CDATA[	// Call pre load integration functions.
	call_integration_hook('integrate_pre_load');]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		global $mobiquo_config;
		if(isset($mobiquo_config['conflict_mod']) && !empty($mobiquo_config['conflict_mod'])) {
			foreach($mobiquo_config['conflict_mod'] as $conflict_mod) {
				if (isset($modSettings[$conflict_mod])) {
					$modSettings[$conflict_mod] = 0;
				}
			}
		}
	}
	// Call pre load integration functions.
	call_integration_hook('integrate_pre_load');]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[		// If we no longer have the member maybe they're being all hackey, stop brute force!
		if (!$id_member)
		{
			require_once($sourcedir . '/LogInOut.php');
			validatePasswordFlood(!empty($user_settings['id_member']) ? $user_settings['id_member'] : $id_member, !empty($user_settings['passwd_flood']) ? $user_settings['passwd_flood'] : false, $id_member != 0);
		}]]></search>
			<add><![CDATA[		if (defined('IN_MOBIQUO'))
		{
			if (!$id_member || !empty($user_settings['passwd_flood']))
			{
				require_once($sourcedir . '/LogInOut.php');
				validatePasswordFlood(!empty($user_settings['id_member']) ? $user_settings['id_member'] : $id_member, !empty($user_settings['passwd_flood']) ? $user_settings['passwd_flood'] : false, $id_member != 0);
			}
		}
		else
		{
			// If we no longer have the member maybe they're being all hackey, stop brute force!
			if (!$id_member)
			{
				require_once($sourcedir . '/LogInOut.php');
				validatePasswordFlood(!empty($user_settings['id_member']) ? $user_settings['id_member'] : $id_member, !empty($user_settings['passwd_flood']) ? $user_settings['passwd_flood'] : false, $id_member != 0);
			}
		}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[		$user_info['query_see_board'] = '(FIND_IN_SET(' . implode(', b.member_groups) != 0 OR FIND_IN_SET(', $user_info['groups']) . ', b.member_groups) != 0' . (isset($user_info['mod_cache']) ? ' OR ' . $user_info['mod_cache']['mq'] : '') . ')';
]]></search>
			<add><![CDATA[		$user_info['query_see_board'] = '(FIND_IN_SET(' . implode(', b.member_groups) != 0 OR FIND_IN_SET(', $user_info['groups']) . ', b.member_groups) != 0' . (isset($user_info['mod_cache']) ? ' OR ' . $user_info['mod_cache']['mq'] : '') . ')';

		if (defined('IN_MOBIQUO'))
			if (isset($modSettings['boards_hide_for_tapatalk']) && !empty($modSettings['boards_hide_for_tapatalk']))
				$user_info['query_see_board'] = '(' . $user_info['query_see_board'] . ' AND b.id_board NOT IN (' . $modSettings['boards_hide_for_tapatalk'] . '))';
]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[		$request = $smcFunc['db_query']('', '
			SELECT
				c.id_cat, b.name AS bname, b.description, b.num_topics, b.member_groups,
				b.id_parent, c.name AS cname, IFNULL(mem.id_member, 0) AS id_moderator,
				mem.real_name' . (!empty($topic) ? ', b.id_board' : '') . ', b.child_level,
				b.id_theme, b.override_theme, b.count_posts, b.id_profile, b.redirect,
				b.unapproved_topics, b.unapproved_posts' . (!empty($topic) ? ', t.approved, t.id_member_started' : '') . '
			FROM {db_prefix}boards AS b' . (!empty($topic) ? '
				INNER JOIN {db_prefix}topics AS t ON (t.id_topic = {int:current_topic})' : '') . '
				LEFT JOIN {db_prefix}categories AS c ON (c.id_cat = b.id_cat)
				LEFT JOIN {db_prefix}moderators AS mods ON (mods.id_board = {raw:board_link})
				LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mods.id_member)
			WHERE b.id_board = {raw:board_link}',
			array(
				'current_topic' => $topic,
				'board_link' => empty($topic) ? $smcFunc['db_quote']('{int:current_board}', array('current_board' => $board)) : 't.id_board',
			)
		);]]></search>
			<add><![CDATA[		if (defined('IN_MOBIQUO'))
		{
			$request = $smcFunc['db_query']('', '
			SELECT
					c.id_cat, b.name AS bname, b.description, b.num_topics, b.member_groups,
					b.id_parent, c.name AS cname, IFNULL(mem.id_member, 0) AS id_moderator,
					mem.real_name' . (!empty($topic) ? ', b.id_board' : '') . ', b.child_level,
					b.id_theme, b.override_theme, b.count_posts, b.id_profile,'.(isset($modSettings['thank_you_post_last_thx_time']) ? 'b.thank_you_post_enable,' : '').' b.redirect,
					b.unapproved_topics, b.unapproved_posts' . (!empty($topic) ? ', t.approved, t.id_member_started' : '') . '
			FROM {db_prefix}boards AS b' . (!empty($topic) ? '
					INNER JOIN {db_prefix}topics AS t ON (t.id_topic = {int:current_topic})' : '') . '
					LEFT JOIN {db_prefix}categories AS c ON (c.id_cat = b.id_cat)
					LEFT JOIN {db_prefix}moderators AS mods ON (mods.id_board = {raw:board_link})
					LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mods.id_member)
			WHERE b.id_board = {raw:board_link} AND {query_see_board}',
			array(
					'current_topic' => $topic,
					'board_link' => empty($topic) ? $smcFunc['db_quote']('{int:current_board}', array('current_board' => $board)) : 't.id_board',
			)
			);
		}
		else
		{
			$request = $smcFunc['db_query']('', '
				SELECT
					c.id_cat, b.name AS bname, b.description, b.num_topics, b.member_groups,
					b.id_parent, c.name AS cname, IFNULL(mem.id_member, 0) AS id_moderator,
					mem.real_name' . (!empty($topic) ? ', b.id_board' : '') . ', b.child_level,
					b.id_theme, b.override_theme, b.count_posts, b.id_profile, b.redirect,
					b.unapproved_topics, b.unapproved_posts' . (!empty($topic) ? ', t.approved, t.id_member_started' : '') . '
				FROM {db_prefix}boards AS b' . (!empty($topic) ? '
					INNER JOIN {db_prefix}topics AS t ON (t.id_topic = {int:current_topic})' : '') . '
					LEFT JOIN {db_prefix}categories AS c ON (c.id_cat = b.id_cat)
					LEFT JOIN {db_prefix}moderators AS mods ON (mods.id_board = {raw:board_link})
					LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mods.id_member)
				WHERE b.id_board = {raw:board_link}',
				array(
					'current_topic' => $topic,
					'board_link' => empty($topic) ? $smcFunc['db_quote']('{int:current_board}', array('current_board' => $board)) : 't.id_board',
				)
			);
		}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[			// Load the membergroups allowed, and check permissions.
			$board_info['groups'] = $row['member_groups'] == '' ? array() : explode(',', $row['member_groups']);
]]></search>
			<add><![CDATA[			if (defined('IN_MOBIQUO'))
				if (isset($modSettings['thank_you_post_last_thx_time']))
					$board_info['thank_you_post_enable'] = empty($row['thank_you_post_enable']);
			// Load the membergroups allowed, and check permissions.
			$board_info['groups'] = $row['member_groups'] == '' ? array() : explode(',', $row['member_groups']);
]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[		// Load the member's data.
		$request = $smcFunc['db_query']('', '
			SELECT' . $select_columns . '
			FROM {db_prefix}members AS mem' . $select_tables . '
			WHERE mem.' . ($is_name ? 'member_name' : 'id_member') . (count($users) == 1 ? ' = {' . ($is_name ? 'string' : 'int') . ':users}' : ' IN ({' . ($is_name ? 'array_string' : 'array_int') . ':users})'),
			array(
				'blank_string' => '',
				'users' => count($users) == 1 ? current($users) : $users,
			)
		);]]></search>
			<add><![CDATA[		if (defined('IN_MOBIQUO'))
		{
			$request = $smcFunc['db_query']('', '
				SELECT' . $select_columns . '
				FROM {db_prefix}members AS mem' . $select_tables . '
				WHERE mem.' . ($is_name ? 'member_name' : 'id_member') . (count($users) == 1 ? ' = {' . ($is_name ? 'string' : 'int') . ':users}' : ' IN ({' . ($is_name ? 'array_string' : 'array_int') . ':users})') .
					($is_name && count($users) == 1 ? ' or mem.real_name = {string:users}' : ''),
				array(
					'blank_string' => '',
					'users' => count($users) == 1 ? current($users) : $users,
				)
			);
		}
		else
		{
			// Load the member's data.
			$request = $smcFunc['db_query']('', '
				SELECT' . $select_columns . '
				FROM {db_prefix}members AS mem' . $select_tables . '
				WHERE mem.' . ($is_name ? 'member_name' : 'id_member') . (count($users) == 1 ? ' = {' . ($is_name ? 'string' : 'int') . ':users}' : ' IN ({' . ($is_name ? 'array_string' : 'array_int') . ':users})'),
				array(
					'blank_string' => '',
					'users' => count($users) == 1 ? current($users) : $users,
				)
			);
		}]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[	$context['menu_separator'] = !empty($settings['use_image_buttons']) ? ' ' : ' | ';]]></search>
			<add><![CDATA[	$jsfile_name = ( $modSettings['tp_tapatalkNotifierForChromeEnabled'] && $context['browser']['is_chrome'] ) ? "tapatalkdetect.js" :"tapatalkdetect-nochrome.js";
	$context['html_headers'] .= '<script type="text/javascript" language="JavaScript" src="' . $boardurl . '/mobiquo/'.$jsfile_name.'"></script>';
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Admin.php">
		<operation>
			<search position="replace"><![CDATA[	// Any files to include for administration?
	if (!empty($modSettings['integrate_admin_include']))]]></search>
			<add><![CDATA[	$modSettings['integrate_admin_include'] = $modSettings['integrate_admin_include'].",\$sourcedir/Subs-Tapatalk.php";
	$modSettings['integrate_admin_areas'] = $modSettings['integrate_admin_areas'].",Tapatalk_add_admin_areas";
	// Any files to include for administration?
	if (!empty($modSettings['integrate_admin_include']))]]></add>
		</operation>
	</file>

	<file name="$themedir/languages/Admin.english.php">
		<operation>
			<search position="after"><![CDATA[?>]]></search>
			<add><![CDATA[//Tapatalk
$txt['tapatalktitle'] = 'Tapatalk Settings';
$txt['tp_general_settings'] = 'General';
$txt['tp_other_settings'] = 'Others';
$txt['tp_board_settings'] = 'Boards';]]></add>
		</operation>
	</file>

	<file name="$themedir/languages/ManageSettings.english.php">
		<operation>
			<search position="after"><![CDATA[?>]]></search>
			<add><![CDATA[//Tapatalk
$txt['tapatalktitle'] = 'Tapatalk Settings';
$txt['tp_pushEnabled'] = 'Enable push for Tapatalk users';
$txt['tapatalkEnabled'] = 'Enable tapatalk';
$txt['tp_guestOkayEnabled'] = 'Enable forum view for guest by tapatalk';
$txt['tp_tapatalkNotifierForChromeEnabled'] = 'Enable Tapatalk Notifier in Chrome';
$txt['tp_general_settings'] = 'General';
$txt['tp_board_settings'] = 'Boards';
$txt['tp_other_settings'] = 'Others';
$txt['tp_parent_board'] = 'Boards1';
$txt['tp_child_board'] = 'Boards2';
$txt['tp_board_settingsDesc'] = 'Set the board you want to hide to tapatalk users';
$txt['tp_general_settingsDesc'] = 'This is the general settings for tapatalk';
$txt['tp_other_settingsDesc'] = 'Taptalk information';
$txt['tp_select_boards'] = 'Select Boards to HIDE on Tapatalk';
$txt['tp_register_page_url'] = 'Register page url';
$txt['taptalk_descp'] = '<strong>Tapatalk for SMF Plugin</strong></br>
For SMF 2.0 RC4/RC5/Final, <a href = "http://www.tapatalk.com">http://www.tapatalk.com</a></br></br>

<b>What is Tapatalk?</b></br>
Tapatalk is a forum app for iPhone/iPad, Android, BlackBerry, Windows Phone and WebOS. The app provides super fast forum access to any vBulletin, IPBoard, phpBB, SMF, xenForo, MyBB and Kunena forums that have activated Tapatalk. Forum owner can download the free plug-in to activate Tapatalk in your forum.</br>

<b>What does this mod do?</b></br>
This mod enables your forum to be accessed by the Tapatalk app. The Tapatalk app can be downloaded from Apple iTune Store or from Google Android Market.</br>

<b>What next do I have to do?</b></br>
After installing this mod, head straight to <a href = "https://tapatalk.com/activate_tapatalk.php">https://tapatalk.com/activate_tapatalk.php</a> and register there. After registering you can enlist your forum into the Tapatalk network.</br>
</br>
Please manually change permission of all files under mobiquo/ folder (including the folder itself) to chmod 755 otherwise it won\'t work!!</br>
</br>
For more information please visit tapatalk.com</br>

Thank you! :)';]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Display.php">
		<operation>
			<search position="replace"><![CDATA[	// What are you gonna display if these are empty?!
	if (empty($topic))
		fatal_lang_error('no_board', false);]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		if ($user_info['is_guest'] && $_REQUEST['start'] == 'new')
		{
			$_REQUEST['start'] = 0;
			$context['new_position'] = 1;
		}
	}
	// What are you gonna display if these are empty?!
	if (empty($topic))
		fatal_lang_error('no_board', false);]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// How much are we sticking on each page?
	$context['messages_per_page'] = empty($modSettings['disableCustomPerPage']) && !empty($options['messages_per_page']) && !WIRELESS ? $options['messages_per_page'] : $modSettings['defaultMaxMessages'];
]]></search>
			<add><![CDATA[	// How much are we sticking on each page?
	if (!defined('IN_MOBIQUO'))
		$context['messages_per_page'] = empty($modSettings['disableCustomPerPage']) && !empty($options['messages_per_page']) && !WIRELESS ? $options['messages_per_page'] : $modSettings['defaultMaxMessages'];
	else
		$context['messages_per_page'] = isset($GLOBALS['post_per_page']) ? intval($GLOBALS['post_per_page']) : 20;]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[			// We need to reverse the start as well in this case.
			$_REQUEST['start'] = empty($options['view_newest_first']) ? $context['start_from'] : $context['total_visible_posts'] - $context['start_from'] - 1;]]></search>
			<add><![CDATA[			if (!defined('IN_MOBIQUO'))
			{
				// We need to reverse the start as well in this case.
				$_REQUEST['start'] = empty($options['view_newest_first']) ? $context['start_from'] : $context['total_visible_posts'] - $context['start_from'] - 1;
			}
			else
			{
				if (!empty($options['view_newest_first']))
					$context['start_from'] = $context['total_visible_posts'] - $context['start_from'];
				if ($context['start_from'] >= $context['total_visible_posts'])
					$context['new_position'] = $context['total_visible_posts'];
				else
					$context['new_position'] = $context['start_from'] + 1;

				// We need to reverse the start as well in this case.
				$_REQUEST['start'] = $context['start_from'] - ($context['start_from'] % $context['messages_per_page']);
			}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Construct the page index, allowing for the .START method...
	$context['page_index'] = constructPageIndex($scripturl . '?topic=' . $topic . '.%1$d', $_REQUEST['start'], $context['total_visible_posts'], $context['messages_per_page'], true);]]></search>
			<add><![CDATA[	// Construct the page index, allowing for the .START method...
	if (!defined('IN_MOBIQUO'))
		$context['page_index'] = constructPageIndex($scripturl . '?topic=' . $topic . '.%1$d', $_REQUEST['start'], $context['total_visible_posts'], $context['messages_per_page'], true);
]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	$messages = array();
	$all_posters = array();]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
		if (!isset($context['new_position'])) $context['new_position'] = $start + 1;

	$messages = array();
	$all_posters = array();]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Errors.php">
		<operation>
			<search position="replace"><![CDATA[// Handle fatal errors - like connection errors or load average problems
function db_fatal_error($loadavg = false)
{
	global $sourcedir;

	show_db_error($loadavg);

	// Since we use "or db_fatal_error();" this is needed...
	return false;
}]]></search>
			<add><![CDATA[// Handle fatal errors - like connection errors or load average problems
function db_fatal_error($loadavg = false)
{
	if (defined('IN_MOBIQUO'))
	{
		//for tapatalk
		@get_error('Sorry, SMF was unable to connect to the database.  This may be caused by the server being busy.  Please try again later.');
	}
	else
	{
		global $sourcedir;

		show_db_error($loadavg);

		// Since we use "or db_fatal_error();" this is needed...
		return false;
	}
}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// We don't have $txt yet, but that's okay...
	if (empty($txt))
		die($error);]]></search>
			<add><![CDATA[	if (!defined('IN_MOBIQUO'))
	{
		// We don't have $txt yet, but that's okay...
		if (empty($txt))
			die($error);
	}
	else
	{
		if (empty($txt))
			@get_error($error);
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Try to load a theme if we don't have one.
	if (empty($context['theme_loaded']) && empty($fatal_error_called))]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		if ($error == 'loginWaitTime_broken' && is_int($sprintf[0]))
		{
			sleep($sprintf[0]);
			return;
		}
	}
	// Try to load a theme if we don't have one.
	if (empty($context['theme_loaded']) && empty($fatal_error_called))]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// If this is an E_ERROR or E_USER_ERROR.... die.  Violently so.
	if ($error_level % 255 == E_ERROR)
		obExit(false);]]></search>
			<add><![CDATA[	// If this is an E_ERROR or E_USER_ERROR.... die.  Violently so.
	if ($error_level % 255 == E_ERROR)
	{
		if (!defined('IN_MOBIQUO'))
			obExit(false);
		else
			@get_error($message);
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// We should NEVER get to this point.  Any fatal error MUST quit, or very bad things can happen.
	if ($error_level % 255 == E_ERROR)
		die('Hacking attempt...');]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
		@get_error();
	else
	{
		// We should NEVER get to this point.  Any fatal error MUST quit, or very bad things can happen.
		if ($error_level % 255 == E_ERROR)
			die('Hacking attempt...');
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[function setup_fatal_error_context($error_message)
{]]></search>
			<add><![CDATA[function setup_fatal_error_context($error_message)
{
	if (defined('IN_MOBIQUO'))
		@get_error($error_message);]]></add>
		</operation>
	</file>

	<file name="$sourcedir/LogInOut.php">
		<operation>
			<search position="replace"><![CDATA[	$request = $smcFunc['db_query']('', '
		SELECT passwd, id_member, id_group, lngfile, is_activated, email_address, additional_groups, member_name, password_salt,
			openid_uri, passwd_flood
		FROM {db_prefix}members
		WHERE ' . ($smcFunc['db_case_sensitive'] ? 'LOWER(member_name) = LOWER({string:user_name})' : 'member_name = {string:user_name}') . '
		LIMIT 1',
		array(
			'user_name' => $smcFunc['db_case_sensitive'] ? strtolower($_POST['user']) : $_POST['user'],
		)
	);]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		$request = $smcFunc['db_query']('', '
			SELECT passwd, id_member, id_group, lngfile, is_activated, email_address, additional_groups, member_name, password_salt,
				openid_uri, passwd_flood, id_post_group
			FROM {db_prefix}members
			WHERE ' . ($smcFunc['db_case_sensitive'] ? 'LOWER(member_name) = LOWER({string:user_name})' : 'member_name = {string:user_name}') . '
			LIMIT 1',
			array(
				'user_name' => $smcFunc['db_case_sensitive'] ? strtolower($_POST['user']) : $_POST['user'],
			)
		);
	}
	else
	{
		$request = $smcFunc['db_query']('', '
			SELECT passwd, id_member, id_group, lngfile, is_activated, email_address, additional_groups, member_name, password_salt,
				openid_uri, passwd_flood
			FROM {db_prefix}members
			WHERE ' . ($smcFunc['db_case_sensitive'] ? 'LOWER(member_name) = LOWER({string:user_name})' : 'member_name = {string:user_name}') . '
			LIMIT 1',
			array(
				'user_name' => $smcFunc['db_case_sensitive'] ? strtolower($_POST['user']) : $_POST['user'],
			)
		);
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[
	// Are you banned?
	is_not_banned(true);]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		// added by tapatalk
		if (isset($user_settings['id_group']))
		$user_info['groups'] = array($user_settings['id_group']);
		
		if (isset($user_settings['id_post_group']))
		$user_info['groups'][] = $user_settings['id_post_group'];
		
		if (!empty($user_settings['additional_groups']) && $user_settings['additional_groups'][0] !== '')
		$user_info['groups'] = array_merge($user_info['groups'], $user_settings['additional_groups']);
		
		//Add by tapatalk
		require_once('input.php');
		global $request_params;
		$input = Tapatalk_Input::filterXmlInput(array(
		'username'  => Tapatalk_Input::STRING,
		'password'  => Tapatalk_Input::STRING,
		'anonymous' => Tapatalk_Input::INT,
		'push'	  => Tapatalk_Input::STRING,
		), $request_params);
		if ($input['push']) update_push();
	}
	// Are you banned?
	is_not_banned(true);]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[?>]]></search>
						<add><![CDATA[
function update_push()
{
	global $smcFunc, $user_info, $db_prefix;
	
	if ($user_info['id'] && mobi_table_exist('tapatalk_users'))
	{
		$request = $smcFunc['db_insert']('ignore',
					'{db_prefix}tapatalk_users',
					array('userid' => 'int'),
					array($user_info['id']),
					array('userid')
				);
		if ($smcFunc['db_affected_rows']($request) == 0)
		{
			$smcFunc['db_query']('', '
				UPDATE {db_prefix}tapatalk_users
				SET updated = CURRENT_TIMESTAMP 
				WHERE userid = {int:user_id}',
				array(
					'user_id' => $user_info['id'],
				)
			);
		}
	}
}
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/MessageIndex.php">
		<operation>
			<search position="replace"><![CDATA[	// Grab the appropriate topic information...
	if (!$pre_query || !empty($topic_ids))
	{
		// For search engine effectiveness we'll link guests differently.
		$context['pageindex_multiplier'] = empty($modSettings['disableCustomPerPage']) && !empty($options['messages_per_page']) && !WIRELESS ? $options['messages_per_page'] : $modSettings['defaultMaxMessages'];

		$result = $smcFunc['db_query']('substring', '
			SELECT
				t.id_topic, t.num_replies, t.locked, t.num_views, t.is_sticky, t.id_poll, t.id_previous_board,
				' . ($user_info['is_guest'] ? '0' : 'IFNULL(lt.id_msg, IFNULL(lmr.id_msg, -1)) + 1') . ' AS new_from,
				t.id_last_msg, t.approved, t.unapproved_posts, ml.poster_time AS last_poster_time,
				ml.id_msg_modified, ml.subject AS last_subject, ml.icon AS last_icon,
				ml.poster_name AS last_member_name, ml.id_member AS last_id_member,
				IFNULL(meml.real_name, ml.poster_name) AS last_display_name, t.id_first_msg,
				mf.poster_time AS first_poster_time, mf.subject AS first_subject, mf.icon AS first_icon,
				mf.poster_name AS first_member_name, mf.id_member AS first_id_member,
				IFNULL(memf.real_name, mf.poster_name) AS first_display_name, SUBSTRING(ml.body, 1, 385) AS last_body,
				SUBSTRING(mf.body, 1, 385) AS first_body, ml.smileys_enabled AS last_smileys, mf.smileys_enabled AS first_smileys
			FROM {db_prefix}topics AS t
				INNER JOIN {db_prefix}messages AS ml ON (ml.id_msg = t.id_last_msg)
				INNER JOIN {db_prefix}messages AS mf ON (mf.id_msg = t.id_first_msg)
				LEFT JOIN {db_prefix}members AS meml ON (meml.id_member = ml.id_member)
				LEFT JOIN {db_prefix}members AS memf ON (memf.id_member = mf.id_member)' . ($user_info['is_guest'] ? '' : '
				LEFT JOIN {db_prefix}log_topics AS lt ON (lt.id_topic = t.id_topic AND lt.id_member = {int:current_member})
				LEFT JOIN {db_prefix}log_mark_read AS lmr ON (lmr.id_board = {int:current_board} AND lmr.id_member = {int:current_member})'). '
			WHERE ' . ($pre_query ? 't.id_topic IN ({array_int:topic_list})' : 't.id_board = {int:current_board}') . (!$modSettings['postmod_active'] || $context['can_approve_posts'] ? '' : '
				AND (t.approved = {int:is_approved}' . ($user_info['is_guest'] ? '' : ' OR t.id_member_started = {int:current_member}') . ')') . '
			ORDER BY ' . ($pre_query ? 'FIND_IN_SET(t.id_topic, {string:find_set_topics})' : (!empty($modSettings['enableStickyTopics']) ? 'is_sticky' . ($fake_ascending ? '' : ' DESC') . ', ' : '') . $_REQUEST['sort'] . ($ascending ? '' : ' DESC')) . '
			LIMIT ' . ($pre_query ? '' : '{int:start}, ') . '{int:maxindex}',
			array(
				'current_board' => $board,
				'current_member' => $user_info['id'],
				'topic_list' => $topic_ids,
				'is_approved' => 1,
				'find_set_topics' => implode(',', $topic_ids),
				'start' => $start,
				'maxindex' => $maxindex,
			)
		);]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		global $mode;
		$getStickyTopics = $mode == 'TOP' ? 1 : 0 ; 
	}
	// Grab the appropriate topic information...
	if (!$pre_query || !empty($topic_ids))
	{
		// For search engine effectiveness we'll link guests differently.
		$context['pageindex_multiplier'] = empty($modSettings['disableCustomPerPage']) && !empty($options['messages_per_page']) && !WIRELESS ? $options['messages_per_page'] : $modSettings['defaultMaxMessages'];
		if (!defined('IN_MOBIQUO'))
		{
			$result = $smcFunc['db_query']('substring', '
				SELECT
					t.id_topic, t.num_replies, t.locked, t.num_views, t.is_sticky, t.id_poll, t.id_previous_board,
					' . ($user_info['is_guest'] ? '0' : 'IFNULL(lt.id_msg, IFNULL(lmr.id_msg, -1)) + 1') . ' AS new_from,
					t.id_last_msg, t.approved, t.unapproved_posts, ml.poster_time AS last_poster_time,
					ml.id_msg_modified, ml.subject AS last_subject, ml.icon AS last_icon,
					ml.poster_name AS last_member_name, ml.id_member AS last_id_member,
					IFNULL(meml.real_name, ml.poster_name) AS last_display_name, t.id_first_msg,
					mf.poster_time AS first_poster_time, mf.subject AS first_subject, mf.icon AS first_icon,
					mf.poster_name AS first_member_name, mf.id_member AS first_id_member,
					IFNULL(memf.real_name, mf.poster_name) AS first_display_name, SUBSTRING(ml.body, 1, 385) AS last_body,
					SUBSTRING(mf.body, 1, 385) AS first_body, ml.smileys_enabled AS last_smileys, mf.smileys_enabled AS first_smileys
				FROM {db_prefix}topics AS t
					INNER JOIN {db_prefix}messages AS ml ON (ml.id_msg = t.id_last_msg)
					INNER JOIN {db_prefix}messages AS mf ON (mf.id_msg = t.id_first_msg)
					LEFT JOIN {db_prefix}members AS meml ON (meml.id_member = ml.id_member)
					LEFT JOIN {db_prefix}members AS memf ON (memf.id_member = mf.id_member)' . ($user_info['is_guest'] ? '' : '
					LEFT JOIN {db_prefix}log_topics AS lt ON (lt.id_topic = t.id_topic AND lt.id_member = {int:current_member})
					LEFT JOIN {db_prefix}log_mark_read AS lmr ON (lmr.id_board = {int:current_board} AND lmr.id_member = {int:current_member})'). '
				WHERE ' . ($pre_query ? 't.id_topic IN ({array_int:topic_list})' : 't.id_board = {int:current_board}') . (!$modSettings['postmod_active'] || $context['can_approve_posts'] ? '' : '
					AND (t.approved = {int:is_approved}' . ($user_info['is_guest'] ? '' : ' OR t.id_member_started = {int:current_member}') . ')') . '
				ORDER BY ' . ($pre_query ? 'FIND_IN_SET(t.id_topic, {string:find_set_topics})' : (!empty($modSettings['enableStickyTopics']) ? 'is_sticky' . ($fake_ascending ? '' : ' DESC') . ', ' : '') . $_REQUEST['sort'] . ($ascending ? '' : ' DESC')) . '
				LIMIT ' . ($pre_query ? '' : '{int:start}, ') . '{int:maxindex}',
				array(
					'current_board' => $board,
					'current_member' => $user_info['id'],
					'topic_list' => $topic_ids,
					'is_approved' => 1,
					'find_set_topics' => implode(',', $topic_ids),
					'start' => $start,
					'maxindex' => $maxindex,
				)
			);
		}
		else
		{
			$result = $smcFunc['db_query']('substring', '
				SELECT
					t.id_topic, t.num_replies, t.locked, t.num_views, t.is_sticky, t.id_poll, t.id_previous_board,
					' . ($user_info['is_guest'] ? '0' : 'IFNULL(lt.id_msg, IFNULL(lmr.id_msg, -1)) + 1') . ' AS new_from,
					t.id_last_msg, t.approved, t.unapproved_posts, ml.poster_time AS last_poster_time,
					ml.id_msg_modified, ml.subject AS last_subject, ml.icon AS last_icon,
					ml.poster_name AS last_member_name, ml.id_member AS last_id_member,
					IFNULL(meml.real_name, ml.poster_name) AS last_display_name, t.id_first_msg,
					mf.poster_time AS first_poster_time, mf.subject AS first_subject, mf.icon AS first_icon,
					mf.poster_name AS first_member_name, mf.id_member AS first_id_member,
					IFNULL(memf.real_name, mf.poster_name) AS first_display_name, SUBSTRING(ml.body, 1, 385) AS last_body,
					SUBSTRING(mf.body, 1, 385) AS first_body, ml.smileys_enabled AS last_smileys, mf.smileys_enabled AS first_smileys
				FROM {db_prefix}topics AS t
					INNER JOIN {db_prefix}messages AS ml ON (ml.id_msg = t.id_last_msg)
					INNER JOIN {db_prefix}messages AS mf ON (mf.id_msg = t.id_first_msg)
					LEFT JOIN {db_prefix}members AS meml ON (meml.id_member = ml.id_member)
					LEFT JOIN {db_prefix}members AS memf ON (memf.id_member = mf.id_member)' . ($user_info['is_guest'] ? '' : '
					LEFT JOIN {db_prefix}log_topics AS lt ON (lt.id_topic = t.id_topic AND lt.id_member = {int:current_member})
					LEFT JOIN {db_prefix}log_mark_read AS lmr ON (lmr.id_board = {int:current_board} AND lmr.id_member = {int:current_member})'). '
				WHERE ' . ($pre_query ? 't.id_topic IN ({array_int:topic_list})' : 't.id_board = {int:current_board}') . (!$modSettings['postmod_active'] || $context['can_approve_posts'] ? '' : '
					AND (t.approved = {int:is_approved}' . ($user_info['is_guest'] ? '' : ' OR t.id_member_started = {int:current_member}') . ')').' AND t.is_sticky = {int:iis_sticky}'. '
				ORDER BY ' . ($pre_query ? 'FIND_IN_SET(t.id_topic, {string:find_set_topics})' : (!empty($modSettings['enableStickyTopics']) ? 'is_sticky' . ($fake_ascending ? '' : ' DESC') . ', ' : '') . $_REQUEST['sort'] . ($ascending ? '' : ' DESC')) . '
				LIMIT ' . ($pre_query ? '' : '{int:start}, ') . '{int:maxindex}',
				array(
					'current_board' => $board,
					'current_member' => $user_info['id'],
					'topic_list' => $topic_ids,
					'is_approved' => 1,
					'find_set_topics' => implode(',', $topic_ids),
					'start' => $start,
					'maxindex' => $maxindex,
					'iis_sticky' => $getStickyTopics,
				)
			);
		}]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Notify.php">
		<operation>
			<search position="replace"><![CDATA[
	// Make sure the topic has been specified.
	if (empty($topic))
		fatal_lang_error('not_a_topic', false);]]></search>
			<add><![CDATA[	// Make sure the topic has been specified.
	if (!defined('IN_MOBIQUO'))
		if (empty($topic))
			fatal_lang_error('not_a_topic', false);
	else
		if (empty($topic) && !$_GET['isUnsubscribeAll'])
			fatal_lang_error('not_a_topic', false);]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[		// Just turn notifications off.
		$smcFunc['db_query']('', '
			DELETE FROM {db_prefix}log_notify
			WHERE id_member = {int:current_member}
				AND id_topic = {int:current_topic}',
			array(
				'current_member' => $user_info['id'],
				'current_topic' => $topic,
			)
		);]]></search>
			<add><![CDATA[		if($_GET['isUnsubscribeAll'])
		{
			$smcFunc['db_query']('', '
						DELETE FROM {db_prefix}log_notify
						WHERE id_member = {int:current_member}',
					array(
						'current_member' => $user_info['id'],
					)
				);
		}
		else
		{
			// Just turn notifications off.
			$smcFunc['db_query']('', '
					DELETE FROM {db_prefix}log_notify
					WHERE id_member = {int:current_member}
						AND id_topic = {int:current_topic}',
				array(
					'current_member' => $user_info['id'],
					'current_topic' => $topic,
				)
			);
		}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// You have to specify a board to turn notifications on!
	if (empty($board))
		fatal_lang_error('no_board', false);]]></search>
			<add><![CDATA[	// You have to specify a board to turn notifications on!
	if (defined('IN_MOBIQUO'))
		if (empty($board) && !$_GET['isUnsubscribeAll'])
			fatal_lang_error('no_board', false);
	else		
		if (empty($board))
			fatal_lang_error('no_board', false);]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[		// Turn notification off for this board.
		$smcFunc['db_query']('', '
			DELETE FROM {db_prefix}log_notify
			WHERE id_member = {int:current_member}
				AND id_board = {int:current_board}',
			array(
				'current_board' => $board,
				'current_member' => $user_info['id'],
			)
		);]]></search>
			<add><![CDATA[		if ($_GET['isUnsubscribeAll'])
		{
			$smcFunc['db_query']('', '
					DELETE FROM {db_prefix}log_notify
					WHERE id_member = {int:current_member}',
				array(
					'current_member' => $user_info['id'],
				)
			);
		}
		else
		{
			// Turn notification off for this board.
			$smcFunc['db_query']('', '
					DELETE FROM {db_prefix}log_notify
					WHERE id_member = {int:current_member}
						AND id_board = {int:current_board}',
				array(
					'current_board' => $board,
					'current_member' => $user_info['id'],
				)
			);
		}]]></add>
		</operation>
	</file>

	<file name="$sourcedir/PersonalMessage.php">
		<operation>
			<search position="replace"><![CDATA[	$smcFunc['db_free_result']($request);

	// Only show the button if there are messages to delete.
	$context['show_delete'] = $max_messages > 0;]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
		$context['pmnum'] = $max_messages; // tapatalk
	$smcFunc['db_free_result']($request);

	// Only show the button if there are messages to delete.
	$context['show_delete'] = $max_messages > 0;]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	if (!$user_info['is_admin'] && !empty($modSettings['pm_posts_verification']) && $user_info['posts'] < $modSettings['pm_posts_verification'])
	{
		require_once($sourcedir . '/Subs-Editor.php');
		$verificationOptions = array(
			'id' => 'pm',
		);
		$context['require_verification'] = create_control_verification($verificationOptions, true);

		if (is_array($context['require_verification']))
		{
			$post_errors = array_merge($post_errors, $context['require_verification']);
		}
	}]]></search>
			<add><![CDATA[	if (!defined('IN_MOBIQUO'))
	{
		if (!$user_info['is_admin'] && !empty($modSettings['pm_posts_verification']) && $user_info['posts'] < $modSettings['pm_posts_verification'])
		{
			require_once($sourcedir . '/Subs-Editor.php');
			$verificationOptions = array(
				'id' => 'pm',
			);
			$context['require_verification'] = create_control_verification($verificationOptions, true);

			if (is_array($context['require_verification']))
			{
				$post_errors = array_merge($post_errors, $context['require_verification']);
			}
		}
	}
	else
	{
		if (!$modSettings['disable_pm_verification'] && !$user_info['is_admin'] && !empty($modSettings['pm_posts_verification']) && $user_info['posts'] < $modSettings['pm_posts_verification'])
		{
			require_once($sourcedir . '/Subs-Editor.php');
			$verificationOptions = array(
				'id' => 'pm',
			);
			$context['require_verification'] = create_control_verification($verificationOptions, true);

			if (is_array($context['require_verification']))
			{
				$post_errors = array_merge($post_errors, $context['require_verification']);
			}
		}
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Message sent successfully?
	if (!empty($context['send_log']) && empty($context['send_log']['failed']))
		$context['current_label_redirect'] = $context['current_label_redirect'] . ';done=sent';]]></search>
			<add><![CDATA[	// Message sent successfully?
	if (!empty($context['send_log']) && empty($context['send_log']['failed']))
	{
		$context['current_label_redirect'] = $context['current_label_redirect'] . ';done=sent';
		global $boarddir;
		if (function_exists('tapatalk_push'))
		tapatalk_push_pm();
		else if(file_exists($boarddir . '/mobiquo/push_hook.php'))
		{
			include($boarddir . '/mobiquo/push_hook.php');
			tapatalk_push_pm();
		}
	}]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Post.php">
		<operation>
			<search position="replace"><![CDATA[			// Make sure they _can_ quote this post, and if so get it.
			$request = $smcFunc['db_query']('', '
				SELECT m.subject, IFNULL(mem.real_name, m.poster_name) AS poster_name, m.poster_time, m.body
				FROM {db_prefix}messages AS m
					INNER JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board AND {query_see_board})
					LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = m.id_member)
				WHERE m.id_msg = {int:id_msg}' . (!$modSettings['postmod_active'] || allowedTo('approve_posts') ? '' : '
					AND m.approved = {int:is_approved}') . '
				LIMIT 1',
				array(
					'id_msg' => (int) $_REQUEST['quote'],
					'is_approved' => 1,
				)
			);
			if ($smcFunc['db_num_rows']($request) == 0)
				fatal_lang_error('quoted_post_deleted', false);
			list ($form_subject, $mname, $mdate, $form_message) = $smcFunc['db_fetch_row']($request);
			$smcFunc['db_free_result']($request);

			// Add 'Re: ' to the front of the quoted subject.
			if (trim($context['response_prefix']) != '' && $smcFunc['strpos']($form_subject, trim($context['response_prefix'])) !== 0)
				$form_subject = $context['response_prefix'] . $form_subject;

			// Censor the message and subject.
			censorText($form_message);
			censorText($form_subject);

			// But if it's in HTML world, turn them into htmlspecialchar's so they can be edited!
			if (strpos($form_message, '[html]') !== false)
			{
				$parts = preg_split('~(\[/code\]|\[code(?:=[^\]]+)?\])~i', $form_message, -1, PREG_SPLIT_DELIM_CAPTURE);
				for ($i = 0, $n = count($parts); $i < $n; $i++)
				{
					// It goes 0 = outside, 1 = begin tag, 2 = inside, 3 = close tag, repeat.
					if ($i % 4 == 0)
						$parts[$i] = preg_replace('~\[html\](.+?)\[/html\]~ise', '\'[html]\' . preg_replace(\'~<br\s?/?' . '>~i\', \'&lt;br /&gt;<br />\', \'$1\') . \'[/html]\'', $parts[$i]);
				}
				$form_message = implode('', $parts);
			}

			$form_message = preg_replace('~<br ?/?' . '>~i', "\n", $form_message);

			// Remove any nested quotes, if necessary.
			if (!empty($modSettings['removeNestedQuotes']))
				$form_message = preg_replace(array('~\n?\[quote.*?\].+?\[/quote\]\n?~is', '~^\n~', '~\[/quote\]~'), '', $form_message);

			// Add a quote string on the front and end.
			$form_message = '[quote author=' . $mname . ' link=topic=' . $topic . '.msg' . (int) $_REQUEST['quote'] . '#msg' . (int) $_REQUEST['quote'] . ' date=' . $mdate . ']' . "\n" . rtrim($form_message) . "\n" . '[/quote]';
]]></search>
			<add><![CDATA[			if (!defined('IN_MOBIQUO'))
			{
				// Make sure they _can_ quote this post, and if so get it.
				$request = $smcFunc['db_query']('', '
					SELECT m.subject, IFNULL(mem.real_name, m.poster_name) AS poster_name, m.poster_time, m.body
					FROM {db_prefix}messages AS m
						INNER JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board AND {query_see_board})
						LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = m.id_member)
					WHERE m.id_msg = {int:id_msg}' . (!$modSettings['postmod_active'] || allowedTo('approve_posts') ? '' : '
						AND m.approved = {int:is_approved}') . '
					LIMIT 1',
					array(
						'id_msg' => (int) $_REQUEST['quote'],
						'is_approved' => 1,
					)
				);
				if ($smcFunc['db_num_rows']($request) == 0)
					fatal_lang_error('quoted_post_deleted', false);
				list ($form_subject, $mname, $mdate, $form_message) = $smcFunc['db_fetch_row']($request);
				$smcFunc['db_free_result']($request);

				// Add 'Re: ' to the front of the quoted subject.
				if (trim($context['response_prefix']) != '' && $smcFunc['strpos']($form_subject, trim($context['response_prefix'])) !== 0)
					$form_subject = $context['response_prefix'] . $form_subject;

				// Censor the message and subject.
				censorText($form_message);
				censorText($form_subject);

				// But if it's in HTML world, turn them into htmlspecialchar's so they can be edited!
				if (strpos($form_message, '[html]') !== false)
				{
					$parts = preg_split('~(\[/code\]|\[code(?:=[^\]]+)?\])~i', $form_message, -1, PREG_SPLIT_DELIM_CAPTURE);
					for ($i = 0, $n = count($parts); $i < $n; $i++)
					{
						// It goes 0 = outside, 1 = begin tag, 2 = inside, 3 = close tag, repeat.
						if ($i % 4 == 0)
							$parts[$i] = preg_replace('~\[html\](.+?)\[/html\]~ise', '\'[html]\' . preg_replace(\'~<br\s?/?' . '>~i\', \'&lt;br /&gt;<br />\', \'$1\') . \'[/html]\'', $parts[$i]);
					}
					$form_message = implode('', $parts);
				}

				$form_message = preg_replace('~<br ?/?' . '>~i', "\n", $form_message);

				// Remove any nested quotes, if necessary.
				if (!empty($modSettings['removeNestedQuotes']))
					$form_message = preg_replace(array('~\n?\[quote.*?\].+?\[/quote\]\n?~is', '~^\n~', '~\[/quote\]~'), '', $form_message);

				// Add a quote string on the front and end.
				$form_message = '[quote author=' . $mname . ' link=topic=' . $topic . '.msg' . (int) $_REQUEST['quote'] . '#msg' . (int) $_REQUEST['quote'] . ' date=' . $mdate . ']' . "\n" . rtrim($form_message) . "\n" . '[/quote]';
			}
			else
			{
				$_REQUEST['quote'] = explode("-", $_REQUEST['quote']);
				$message_content = '';
				foreach($_REQUEST['quote'] as $value)
				{
					// Make sure they _can_ quote this post, and if so get it.
					$request = $smcFunc['db_query']('', '
						SELECT m.subject, IFNULL(mem.real_name, m.poster_name) AS poster_name, m.poster_time, m.body
						FROM {db_prefix}messages AS m
							INNER JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board AND {query_see_board})
							LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = m.id_member)
						WHERE m.id_msg = {int:id_msg}' . (!$modSettings['postmod_active'] || allowedTo('approve_posts') ? '' : '
							AND m.approved = {int:is_approved}') . '
						LIMIT 1',
						array(
							'id_msg' => (int) $value,
							'is_approved' => 1,
						)
					);
					if ($smcFunc['db_num_rows']($request) == 0)
						fatal_lang_error('quoted_post_deleted', false);
					list ($form_subject, $mname, $mdate, $form_message) = $smcFunc['db_fetch_row']($request);
					$smcFunc['db_free_result']($request);

					// Add 'Re: ' to the front of the quoted subject.
					if (trim($context['response_prefix']) != '' && $smcFunc['strpos']($form_subject, trim($context['response_prefix'])) !== 0)
						$form_subject = $context['response_prefix'] . $form_subject;

					// Censor the message and subject.
					censorText($form_message);
					censorText($form_subject);

					// But if it's in HTML world, turn them into htmlspecialchar's so they can be edited!
					if (strpos($form_message, '[html]') !== false)
					{
						$parts = preg_split('~(\[/code\]|\[code(?:=[^\]]+)?\])~i', $form_message, -1, PREG_SPLIT_DELIM_CAPTURE);
						for ($i = 0, $n = count($parts); $i < $n; $i++)
						{
							// It goes 0 = outside, 1 = begin tag, 2 = inside, 3 = close tag, repeat.
							if ($i % 4 == 0)
								$parts[$i] = preg_replace('~\[html\](.+?)\[/html\]~ise', '\'[html]\' . preg_replace(\'~<br\s?/?' . '>~i\', \'&lt;br /&gt;<br />\', \'$1\') . \'[/html]\'', $parts[$i]);
						}
						$form_message = implode('', $parts);
					}

					$form_message = preg_replace('~<br ?/?' . '>~i', "\n", $form_message);

					// Remove any nested quotes, if necessary.
					if (!empty($modSettings['removeNestedQuotes']))
						$form_message = preg_replace(array('~\n?\[quote.*?\].+?\[/quote\]\n?~is', '~^\n~', '~\[/quote\]~'), '', $form_message);

					// Add a quote string on the front and end.
					$message_content .= '[quote author=' . $mname . ' link=topic=' . $topic . '.msg' . (int) $_REQUEST['quote'] . '#msg' . (int) $_REQUEST['quote'] . ' date=' . $mdate . ']' . "\n" . rtrim($form_message) . "\n[/quote]\n\n";
				}
				$form_message = $message_content;
			}
]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[function Post2()
{]]></search>
			<add><![CDATA[function Post2()
{
	if (defined('IN_MOBIQUO'))
		global $request_name;]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Wrong verification code?
	if (!$user_info['is_admin'] && !$user_info['is_mod'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1)))
	{
		require_once($sourcedir . '/Subs-Editor.php');
		$verificationOptions = array(
			'id' => 'post',
		);
		$context['require_verification'] = create_control_verification($verificationOptions, true);
		if (is_array($context['require_verification']))
			$post_errors = array_merge($post_errors, $context['require_verification']);
	}]]></search>
			<add><![CDATA[
	// Wrong verification code?
	if (!defined('IN_MOBIQUO'))
	{
		if (!$user_info['is_admin'] && !$user_info['is_mod'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1)))
		{
			require_once($sourcedir . '/Subs-Editor.php');
			$verificationOptions = array(
				'id' => 'post',
			);
			$context['require_verification'] = create_control_verification($verificationOptions, true);
			if (is_array($context['require_verification']))
				$post_errors = array_merge($post_errors, $context['require_verification']);
		}
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Posting a new topic.
	elseif (empty($topic))]]></search>
			<add><![CDATA[	// Posting a new topic.
	elseif (defined('IN_MOBIQUO')? (empty($topic) && $request_name != 'remove_attachment') : empty($topic))]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Check if they are trying to delete any current attachments....
	if (isset($_REQUEST['msg'], $_POST['attach_del']) && (allowedTo('post_attachment') || ($modSettings['postmod_active'] && allowedTo('post_unapproved_attachments'))))
	{]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
		if (!isset($_REQUEST['msg']) && $request_name == 'remove_attachment') $_REQUEST['msg'] = 0;
		
	// Check if they are trying to delete any current attachments....
	if (isset($_REQUEST['msg'], $_POST['attach_del']) && (allowedTo('post_attachment') || ($modSettings['postmod_active'] && allowedTo('post_unapproved_attachments'))))
	{]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[removeAttachments($attachmentQuery);]]></search>
			<add><![CDATA[		if (defined('IN_MOBIQUO'))
			if ($request_name == 'remove_attachment') $attachmentQuery['id_member'] = 0; // add for tapatalk			
		removeAttachments($attachmentQuery);]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Creating a new topic?
	$newTopic = empty($_REQUEST['msg']) && empty($topic);]]></search>
			<add><![CDATA[	// Creating a new topic?
	if (defined('IN_MOBIQUO'))
	{
		switch ($request_name) {
			case 'reply_post':
			case 'new_topic':
				$attachIDs = $_POST['attachments'];
				break;
			case 'upload_attach':
				$GLOBALS['attachIDs'] = $attachIDs;
			case 'remove_attachment':
				return;
		}
	}
	$newTopic = empty($_REQUEST['msg']) && empty($topic);]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	elseif (!$newTopic)
		$smcFunc['db_query']('', '
			DELETE FROM {db_prefix}log_notify
			WHERE id_member = {int:current_member}
				AND id_topic = {int:current_topic}',
			array(
				'current_member' => $user_info['id'],
				'current_topic' => $topic,
			)
		);]]></search>
			<add><![CDATA[	else
	{
		if (!defined('IN_MOBIQUO'))
		{
			if (!$newTopic)
				$smcFunc['db_query']('', '
					DELETE FROM {db_prefix}log_notify
					WHERE id_member = {int:current_member}
						AND id_topic = {int:current_topic}',
					array(
						'current_member' => $user_info['id'],
						'current_topic' => $topic,
					)
				);
		}
	}]]></add>
		</operation>


		<operation>
			<search position="replace"><![CDATA[			// Only send it to everyone if the topic is approved, otherwise just to the topic starter if they want it.
			if ($topic_info['approved'])
				sendNotifications($topic, 'reply');]]></search>
			<add><![CDATA[			// Only send it to everyone if the topic is approved, otherwise just to the topic starter if they want it.
			if ($topic_info['approved'])
			{
				sendNotifications($topic, 'reply');
				global $boarddir;
				if (function_exists('tapatalk_push'))
					tapatalk_push_reply($msgOptions['id']);
				else if(file_exists($boarddir . '/mobiquo/push_hook.php'))
				{
					include($boarddir . '/mobiquo/push_hook.php');
					tapatalk_push_reply($msgOptions['id']);
				}
			}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Return to post if the mod is on.
	if (isset($_REQUEST['msg']) && !empty($_REQUEST['goback']))]]></search>
			<add><![CDATA[	// Return to post if the mod is on.
	if (defined('IN_MOBIQUO')) 
	{
		$GLOBALS['new_post_id'] = $msgOptions['id'];
		$GLOBALS['new_topic_id'] = $topic;
		$GLOBALS['becomesApproved'] = $becomesApproved;
		$GLOBALS['is_approved'] = $topicOptions['is_approved'];
		return;
	}

	if (isset($_REQUEST['msg']) && !empty($_REQUEST['goback']))]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Recent.php">
		<operation>
			<search position="replace"><![CDATA[		if (empty($boards))
			fatal_lang_error('error_no_boards_selected');]]></search>
			<add><![CDATA[		if (!defined('IN_MOBIQUO'))
			if (empty($boards))
				fatal_lang_error('error_no_boards_selected');
		else
			if (empty($boards))
				return;]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	$context['topics_to_mark'] = implode('-', $topic_ids);]]></search>
			<add><![CDATA[	$context['topics_to_mark'] = implode('-', $topic_ids);
	if (defined('IN_MOBIQUO'))
		$context['num_topics'] = $num_topics;]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Search.php">
		<operation>
			<search position="replace"><![CDATA[	// Select all boards you've selected AND are allowed to see.
	elseif ($user_info['is_admin'] && (!empty($search_params['advanced']) || !empty($_REQUEST['brd'])))
		$search_params['brd'] = empty($_REQUEST['brd']) ? array() : $_REQUEST['brd'];]]></search>
			<add><![CDATA[	// Select all boards you've selected AND are allowed to see.
	elseif ($user_info['is_admin'] && (!empty($search_params['advanced']) || !empty($_REQUEST['brd'])))
	{
		if (!defined('IN_MOBIQUO'))
			$search_params['brd'] = empty($_REQUEST['brd']) ? array() : $_REQUEST['brd'];
		else
			if (!empty($_REQUEST['brd'])) $search_params['brd'] = $_REQUEST['brd'];
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[		// Search_force_index requires all AND parts to have at least one fulltext word.
		if (!empty($modSettings['search_force_index']) && empty($searchWords[$orIndex]['indexed_words']))
		{
			$context['search_errors']['query_not_specific_enough'] = true;
			break;
		}
		elseif ($search_params['subject_only'] && empty($searchWords[$orIndex]['subject_words']) && empty($excludedSubjectWords))
		{
			$context['search_errors']['query_not_specific_enough'] = true;
			break;
		}

		// Make sure we aren't searching for too many indexed words.
		else
		{
			$searchWords[$orIndex]['indexed_words'] = array_slice($searchWords[$orIndex]['indexed_words'], 0, 7);
			$searchWords[$orIndex]['subject_words'] = array_slice($searchWords[$orIndex]['subject_words'], 0, 7);
		}]]></search>
			<add><![CDATA[		// Search_force_index requires all AND parts to have at least one fulltext word.
		if (!defined('IN_MOBIQUO'))
		{
			if (!empty($modSettings['search_force_index']) && empty($searchWords[$orIndex]['indexed_words']))
			{
				$context['search_errors']['query_not_specific_enough'] = true;
				break;
			}
			elseif ($search_params['subject_only'] && empty($searchWords[$orIndex]['subject_words']) && empty($excludedSubjectWords))
			{
				$context['search_errors']['query_not_specific_enough'] = true;
				break;
			}
			// Make sure we aren't searching for too many indexed words.
			else
			{
				$searchWords[$orIndex]['indexed_words'] = array_slice($searchWords[$orIndex]['indexed_words'], 0, 7);
				$searchWords[$orIndex]['subject_words'] = array_slice($searchWords[$orIndex]['subject_words'], 0, 7);
			}
		}
		else
		{
			if (!empty($modSettings['search_force_index']) && empty($searchWords[$orIndex]['indexed_words']))
			{
				$context['search_errors']['query_not_specific_enough'] = true;
				break;
			}
			// Make sure we aren't searching for too many indexed words.
			else
			{
				$searchWords[$orIndex]['indexed_words'] = array_slice($searchWords[$orIndex]['indexed_words'], 0, 7);
				$searchWords[$orIndex]['subject_words'] = array_slice($searchWords[$orIndex]['subject_words'], 0, 7);
			}
		}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[					$ignoreRequest = $smcFunc['db_search_query']('insert_log_search_results_sub_only', ($smcFunc['db_support_ignore'] ? ( '
						INSERT IGNORE INTO {db_prefix}log_search_results
							(id_search, id_topic, relevance, id_msg, num_matches)') : '') . '
						SELECT
							{int:id_search},
							t.id_topic,
							1000 * (
								{int:weight_frequency} / (t.num_replies + 1) +
								{int:weight_age} * CASE WHEN t.id_first_msg < {int:min_msg} THEN 0 ELSE (t.id_first_msg - {int:min_msg}) / {int:recent_message} END +
								{int:weight_length} * CASE WHEN t.num_replies < {int:huge_topic_posts} THEN t.num_replies / {int:huge_topic_posts} ELSE 1 END +
								{int:weight_subject} +
								{int:weight_sticky} * t.is_sticky
							) / {int:weight_total} AS relevance,
							t.id_first_msg,
							1
						FROM {db_prefix}topics AS t
							INNER JOIN {db_prefix}' . ($createTemporary ? 'tmp_' : '') . 'log_search_topics AS lst ON (lst.id_topic = t.id_topic)'
						. ($createTemporary ? '' : 'WHERE lst.id_search = {int:id_search}')
						. (empty($modSettings['search_max_results']) ? '' : '
						LIMIT ' . ($modSettings['search_max_results'] - $_SESSION['search_cache']['num_results'])),
						array(
							'id_search' => $_SESSION['search_cache']['id_search'],
							'weight_age' => $weight['age'],
							'weight_frequency' => $weight['frequency'],
							'weight_length' => $weight['frequency'],
							'weight_sticky' => $weight['frequency'],
							'weight_subject' => $weight['frequency'],
							'weight_total' => $weight_total,
							'min_msg' => $minMsg,
							'recent_message' => $recentMsg,
							'huge_topic_posts' => $humungousTopicPosts,
						)
					);]]></search>
			<add><![CDATA[					if (!defined('IN_MOBIQUO'))
					{
						$ignoreRequest = $smcFunc['db_search_query']('insert_log_search_results_sub_only', ($smcFunc['db_support_ignore'] ? ( '
							INSERT IGNORE INTO {db_prefix}log_search_results
								(id_search, id_topic, relevance, id_msg, num_matches)') : '') . '
							SELECT
								{int:id_search},
								t.id_topic,
								1000 * (
									{int:weight_frequency} / (t.num_replies + 1) +
									{int:weight_age} * CASE WHEN t.id_first_msg < {int:min_msg} THEN 0 ELSE (t.id_first_msg - {int:min_msg}) / {int:recent_message} END +
									{int:weight_length} * CASE WHEN t.num_replies < {int:huge_topic_posts} THEN t.num_replies / {int:huge_topic_posts} ELSE 1 END +
									{int:weight_subject} +
									{int:weight_sticky} * t.is_sticky
								) / {int:weight_total} AS relevance,
								t.id_first_msg,
								1
							FROM {db_prefix}topics AS t
								INNER JOIN {db_prefix}' . ($createTemporary ? 'tmp_' : '') . 'log_search_topics AS lst ON (lst.id_topic = t.id_topic)'
							. ($createTemporary ? '' : 'WHERE lst.id_search = {int:id_search}')
							. (empty($modSettings['search_max_results']) ? '' : '
							LIMIT ' . ($modSettings['search_max_results'] - $_SESSION['search_cache']['num_results'])),
							array(
								'id_search' => $_SESSION['search_cache']['id_search'],
								'weight_age' => $weight['age'],
								'weight_frequency' => $weight['frequency'],
								'weight_length' => $weight['frequency'],
								'weight_sticky' => $weight['frequency'],
								'weight_subject' => $weight['frequency'],
								'weight_total' => $weight_total,
								'min_msg' => $minMsg,
								'recent_message' => $recentMsg,
								'huge_topic_posts' => $humungousTopicPosts,
							)
						);
					}
					else
					{
						$ignoreRequest = $smcFunc['db_search_query']('insert_log_search_results_sub_only', ($smcFunc['db_support_ignore'] ? ( '
							INSERT IGNORE INTO {db_prefix}log_search_results
								(id_search, id_topic, relevance, id_msg, num_matches)') : '') . '
							SELECT
								{int:id_search},
								t.id_topic,
								1000 * (
									{int:weight_frequency} / (t.num_replies + 1) +
									{int:weight_age} * CASE WHEN t.id_first_msg < {int:min_msg} THEN 0 ELSE (t.id_first_msg - {int:min_msg}) / {int:recent_message} END +
									{int:weight_length} * CASE WHEN t.num_replies < {int:huge_topic_posts} THEN t.num_replies / {int:huge_topic_posts} ELSE 1 END +
									{int:weight_subject} +
									{int:weight_sticky} * t.is_sticky
								) / {int:weight_total} AS relevance,
								t.id_first_msg,
								1
							FROM {db_prefix}topics AS t
								INNER JOIN {db_prefix}' . ($createTemporary ? 'tmp_' : '') . 'log_search_topics AS lst ON (lst.id_topic = t.id_topic)'
							. ($createTemporary ? '' : 'WHERE lst.id_search = {int:id_search}')
							. (empty($modSettings['search_max_results']) ? '' : '
							LIMIT ' . ($modSettings['search_max_results'] - $_SESSION['search_cache']['num_results'])),
							array(
								'id_search' => $_SESSION['search_cache']['id_search'],
								'weight_age' => $weight['age'],
								'weight_frequency' => $weight['frequency'],
								'weight_length' => $weight['frequency'],
								'weight_sticky' => $weight['frequency'],
								'weight_subject' => $weight['frequency'],
								'weight_total' => $weight_total,
								'min_msg' => $minMsg,
								'recent_message' => $recentMsg,
								'huge_topic_posts' => $humungousTopicPosts,
							)
						);
					}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Now that we know how many results to expect we can start calculating the page numbers.
	$context['page_index'] = constructPageIndex($scripturl . '?action=search2;params=' . $context['params'], $_REQUEST['start'], $num_results, $modSettings['search_results_per_page'], false);
]]></search>
			<add><![CDATA[	// Now that we know how many results to expect we can start calculating the page numbers.
	if (defined('IN_MOBIQUO'))
		$context['num_results'] = $num_results;
	$context['page_index'] = constructPageIndex($scripturl . '?action=search2;params=' . $context['params'], $_REQUEST['start'], $num_results, $modSettings['search_results_per_page'], false);
]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Subs.php">
		<operation>
			<search position="replace"><![CDATA[			array(
				'tag' => 'b',
				'before' => '<strong>',
				'after' => '</strong>',
			),]]></search>
			<add><![CDATA[/*			array(
				'tag' => 'b',
				'before' => '<strong>',
				'after' => '</strong>',
			),*/]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[			array(
				'tag' => 'color',
				'type' => 'unparsed_equals',
				'test' => '(#[\da-fA-F]{3}|#[\da-fA-F]{6}|[A-Za-z]{1,20}|rgb\(\d{1,3}, ?\d{1,3}, ?\d{1,3}\))\]',
				'before' => '<span style="color: $1;" class="bbc_color">',
				'after' => '</span>',
			),]]></search>
			<add><![CDATA[/*			array(
				'tag' => 'color',
				'type' => 'unparsed_equals',
				'test' => '(#[\da-fA-F]{3}|#[\da-fA-F]{6}|[A-Za-z]{1,20}|rgb\(\d{1,3}, ?\d{1,3}, ?\d{1,3}\))\]',
				'before' => '<span style="color: $1;" class="bbc_color">',
				'after' => '</span>',
			),*/]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[			array(
				'tag' => 'i',
				'before' => '<em>',
				'after' => '</em>',
			),]]></search>
			<add><![CDATA[/*			array(
				'tag' => 'i',
				'before' => '<em>',
				'after' => '</em>',
			),*/]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[			array(
				'tag' => 'quote',
				'before' => '<div class="quoteheader"><div class="topslice_quote">' . $txt['quote'] . '</div></div><blockquote>',
				'after' => '</blockquote><div class="quotefooter"><div class="botslice_quote"></div></div>',
				'block_level' => true,
			),]]></search>
			<add><![CDATA[/*			array(
				'tag' => 'quote',
				'before' => '<div class="quoteheader"><div class="topslice_quote">' . $txt['quote'] . '</div></div><blockquote>',
				'after' => '</blockquote><div class="quotefooter"><div class="botslice_quote"></div></div>',
				'block_level' => true,
			),*/]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[			array(
				'tag' => 'u',
				'before' => '<span class="bbc_u">',
				'after' => '</span>',
			),]]></search>
			<add><![CDATA[/*			array(
				'tag' => 'u',
				'before' => '<span class="bbc_u">',
				'after' => '</span>',
			),*/]]></add>
		</operation>


		<operation>
			<search position="replace"><![CDATA[		// Let mods add new BBC without hassle.
		call_integration_hook('integrate_bbc_codes', array(&$codes));]]></search>
			<add><![CDATA[		if (!defined('IN_MOBIQUO'))
		{
			array_push($codes,
				array(
					'tag' => 'b',
					'before' => '<strong>',
					'after' => '</strong>',
				),
				array(
					'tag' => 'color',
					'type' => 'unparsed_equals',
					'test' => '(#[\da-fA-F]{3}|#[\da-fA-F]{6}|[A-Za-z]{1,20}|rgb\(\d{1,3}, ?\d{1,3}, ?\d{1,3}\))\]',
					'before' => '<span style="color: $1;" class="bbc_color">',
					'after' => '</span>',
				),
				array(
					'tag' => 'i',
					'before' => '<em>',
					'after' => '</em>',
				),
				array(
					'tag' => 'quote',
					'before' => '<div class="quoteheader"><div class="topslice_quote">' . $txt['quote'] . '</div></div><blockquote>',
					'after' => '</blockquote><div class="quotefooter"><div class="botslice_quote"></div></div>',
					'block_level' => true,
				),
				array(
					'tag' => 'u',
					'before' => '<span class="bbc_u">',
					'after' => '</span>',
				)
			);
		}
		// Let mods add new BBC without hassle.
		call_integration_hook('integrate_bbc_codes', array(&$codes));]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[function redirectexit($setLocation = '', $refresh = false)
{]]></search>
			<add><![CDATA[function redirectexit($setLocation = '', $refresh = false)
{
	if (defined('IN_MOBIQUO')) return mobiquo_exit($setLocation);]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Attempt to prevent a recursive loop.
	++$level;]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		// tapatalk add
		if ($_GET['action'] == 'admin' || isset($context['kick_message']))
		{
			@ob_clean();
			
			if(!headers_sent())
			{
				header('Mobiquo_is_login:'.($context['user']['is_logged'] ? 'true' : 'false'));
				header('Content-Type: text/xml');
			}
			
			if ($_GET['action'] == 'admin')
			{
				$response = new xmlrpcresp(
					new xmlrpcval(array(
						'result'		=> new xmlrpcval(false, 'boolean'),
						'is_login_mod'  => new xmlrpcval(false, 'boolean'),
					),'struct')
				);
			}
			else
			{
				$response = new xmlrpcresp(
					new xmlrpcval(array(
						'result'		=> new xmlrpcval(false, 'boolean'),
						'result_text'   => new xmlrpcval(basic_clean($context['kick_message']), 'base64')
					), 'struct')
				);
			}
			
			echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n".$response->serialize('UTF-8');
			exit;
		}
	}
	// Attempt to prevent a recursive loop.
	++$level;]]></add>
		</operation>
	</file>

	<file name="$boarddir/index.php">
		<operation>
			<search position="replace"><![CDATA[// Load the settings from the settings table, and perform operations like optimizing.
reloadSettings();]]></search>
			<add><![CDATA[// Load the settings from the settings table, and perform operations like optimizing.
reloadSettings();
$_SERVER['QUERY_STRING'] = defined('IN_MOBIQUO')? '' : $_SERVER['QUERY_STRING'];]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[// Check if compressed output is enabled, supported, and not already being done.
if (!empty($modSettings['enableCompressedOutput']) && !headers_sent())
{
	// If zlib is being used, turn off output compression.
	if (@ini_get('zlib.output_compression') == '1' || @ini_get('output_handler') == 'ob_gzhandler' || @version_compare(PHP_VERSION, '4.2.0') == -1)
		$modSettings['enableCompressedOutput'] = '0';
	else
	{
		ob_end_clean();
		ob_start('ob_gzhandler');
	}
}]]></search>
			<add><![CDATA[if (!defined('IN_MOBIQUO'))
{
    // Check if compressed output is enabled, supported, and not already being done.
    if (!empty($modSettings['enableCompressedOutput']) && !headers_sent())
    {
        // If zlib is being used, turn off output compression.
        if (@ini_get('zlib.output_compression') == '1' || @ini_get('output_handler') == 'ob_gzhandler' || @version_compare(PHP_VERSION, '4.2.0') == -1)
            $modSettings['enableCompressedOutput'] = '0';
        else
        {
            ob_end_clean();
            ob_start('ob_gzhandler');
        }
    }
}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[// Register an error handler.
set_error_handler('error_handler');]]></search>
			<add><![CDATA[// Register an error handler.
set_error_handler('error_handler');
//set topic and board for mobiquo function
if(defined('IN_MOBIQUO'))
	set_topic_and_board_by_message();]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[// Start the session. (assuming it hasn't already been.)
loadSession();

// Determine if this is using WAP, WAP2, or imode.  Technically, we should check that wap comes before application/xhtml or text/html, but this doesn't work in practice as much as it should.
if (isset($_REQUEST['wap']) || isset($_REQUEST['wap2']) || isset($_REQUEST['imode']))
	unset($_SESSION['nowap']);
elseif (isset($_REQUEST['nowap']))
	$_SESSION['nowap'] = true;
elseif (!isset($_SESSION['nowap']))
{
	if (isset($_SERVER['HTTP_ACCEPT']) && strpos($_SERVER['HTTP_ACCEPT'], 'application/vnd.wap.xhtml+xml') !== false)
		$_REQUEST['wap2'] = 1;
	elseif (isset($_SERVER['HTTP_ACCEPT']) && strpos($_SERVER['HTTP_ACCEPT'], 'text/vnd.wap.wml') !== false)
	{
		if (strpos($_SERVER['HTTP_USER_AGENT'], 'DoCoMo/') !== false || strpos($_SERVER['HTTP_USER_AGENT'], 'portalmmm/') !== false)
			$_REQUEST['imode'] = 1;
		else
			$_REQUEST['wap'] = 1;
	}
}

if (!defined('WIRELESS'))
	define('WIRELESS', isset($_REQUEST['wap']) || isset($_REQUEST['wap2']) || isset($_REQUEST['imode']));

// Some settings and headers are different for wireless protocols.
if (WIRELESS)
{
	define('WIRELESS_PROTOCOL', isset($_REQUEST['wap']) ? 'wap' : (isset($_REQUEST['wap2']) ? 'wap2' : (isset($_REQUEST['imode']) ? 'imode' : '')));

	// Some cellphones can't handle output compression...
	$modSettings['enableCompressedOutput'] = '0';
	// !!! Do we want these hard coded?
	$modSettings['defaultMaxMessages'] = 5;
	$modSettings['defaultMaxTopics'] = 9;

	// Wireless protocol header.
	if (WIRELESS_PROTOCOL == 'wap')
		header('Content-Type: text/vnd.wap.wml');
}

// Restore post data if we are revalidating OpenID.
if (isset($_GET['openid_restore_post']) && !empty($_SESSION['openid']['saved_data'][$_GET['openid_restore_post']]['post']) && empty($_POST))
{
	$_POST = $_SESSION['openid']['saved_data'][$_GET['openid_restore_post']]['post'];
	unset($_SESSION['openid']['saved_data'][$_GET['openid_restore_post']]);
}

// What function shall we execute? (done like this for memory's sake.)
call_user_func(smf_main());

// Call obExit specially; we're coming from the main area ;).
obExit(null, null, true);
]]></search>
			<add><![CDATA[// Start the session. (assuming it hasn't already been.)
loadSession();
if (defined('IN_MOBIQUO'))
{
	$sc = $_SESSION['session_value'];
	$_GET[$_SESSION['session_var']] = $_SESSION['session_value'];
	$_POST[$_SESSION['session_var']] = $_SESSION['session_value'];

	define('WIRELESS', false);

	// What function shall we execute? (done like this for memory's sake.)
	call_user_func(smf_main());

	// Call obExit specially; we're coming from the main area ;).
	//obExit(null, null, true);

	// Clear out the stat cache.
	trackStats();

	// If we have mail to send, send it.
	if (!empty($context['flush_mail']))
		AddMailQueue(true);

	//-------------do something after action--------------
	if (function_exists('after_action_'.$request_name))
		call_user_func('after_action_'.$request_name);

	if (!empty($settings['strict_doctype']))
	{
		// The theme author wants to use the STRICT doctype (only God knows why).
		ob_get_contents();
		if (function_exists('ob_clean'))
			ob_clean();
		else
		{
			ob_end_clean();
			ob_start();
		}
	}
}
else
{
	// Determine if this is using WAP, WAP2, or imode.  Technically, we should check that wap comes before application/xhtml or text/html, but this doesn't work in practice as much as it should.
	if (isset($_REQUEST['wap']) || isset($_REQUEST['wap2']) || isset($_REQUEST['imode']))
		unset($_SESSION['nowap']);
	elseif (isset($_REQUEST['nowap']))
		$_SESSION['nowap'] = true;
	elseif (!isset($_SESSION['nowap']))
	{
		if (isset($_SERVER['HTTP_ACCEPT']) && strpos($_SERVER['HTTP_ACCEPT'], 'application/vnd.wap.xhtml+xml') !== false)
			$_REQUEST['wap2'] = 1;
		elseif (isset($_SERVER['HTTP_ACCEPT']) && strpos($_SERVER['HTTP_ACCEPT'], 'text/vnd.wap.wml') !== false)
		{
			if (strpos($_SERVER['HTTP_USER_AGENT'], 'DoCoMo/') !== false || strpos($_SERVER['HTTP_USER_AGENT'], 'portalmmm/') !== false)
				$_REQUEST['imode'] = 1;
			else
				$_REQUEST['wap'] = 1;
		}
	}

	if (!defined('WIRELESS'))
		define('WIRELESS', isset($_REQUEST['wap']) || isset($_REQUEST['wap2']) || isset($_REQUEST['imode']));

	// Some settings and headers are different for wireless protocols.
	if (WIRELESS)
	{
		define('WIRELESS_PROTOCOL', isset($_REQUEST['wap']) ? 'wap' : (isset($_REQUEST['wap2']) ? 'wap2' : (isset($_REQUEST['imode']) ? 'imode' : '')));

		// Some cellphones can't handle output compression...
		$modSettings['enableCompressedOutput'] = '0';
		// !!! Do we want these hard coded?
		$modSettings['defaultMaxMessages'] = 5;
		$modSettings['defaultMaxTopics'] = 9;

		// Wireless protocol header.
		if (WIRELESS_PROTOCOL == 'wap')
			header('Content-Type: text/vnd.wap.wml');
	}

	// Restore post data if we are revalidating OpenID.
	if (isset($_GET['openid_restore_post']) && !empty($_SESSION['openid']['saved_data'][$_GET['openid_restore_post']]['post']) && empty($_POST))
	{
		$_POST = $_SESSION['openid']['saved_data'][$_GET['openid_restore_post']]['post'];
		unset($_SESSION['openid']['saved_data'][$_GET['openid_restore_post']]);
	}

	// What function shall we execute? (done like this for memory's sake.)
	call_user_func(smf_main());

	// Call obExit specially; we're coming from the main area ;).
	obExit(null, null, true);
}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Special case: session keep-alive, output a transparent pixel.
	if (isset($_GET['action']) && $_GET['action'] == 'keepalive')
	{
		header('Content-Type: image/gif');
		die("\x47\x49\x46\x38\x39\x61\x01\x00\x01\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x21\xF9\x04\x01\x00\x00\x00\x00\x2C\x00\x00\x00\x00\x01\x00\x01\x00\x00\x02\x02\x44\x01\x00\x3B");
	}]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
		global $request_name, $txt, $user_settings, $mobiquo_config, $topic_per_page, $limit_num;
	else
	{
		// Special case: session keep-alive, output a transparent pixel.
		if (isset($_GET['action']) && $_GET['action'] == 'keepalive')
		{
			header('Content-Type: image/gif');
			die("\x47\x49\x46\x38\x39\x61\x01\x00\x01\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x21\xF9\x04\x01\x00\x00\x00\x00\x2C\x00\x00\x00\x00\x01\x00\x01\x00\x00\x02\x02\x44\x01\x00\x3B");
		}
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Attachments don't require the entire theme to be loaded.
	if (isset($_REQUEST['action']) && $_REQUEST['action'] == 'dlattach' && (!empty($modSettings['allow_guestAccess']) && $user_info['is_guest']))
		detectBrowser();
	// Load the current theme.  (note that ?theme=1 will also work, may be used for guest theming.)
	else
		loadTheme();

	// Check if the user should be disallowed access.
	is_not_banned();

	// If we are in a topic and don't have permission to approve it then duck out now.
	if (!empty($topic) && empty($board_info['cur_topic_approved']) && !allowedTo('approve_posts') && ($user_info['id'] != $board_info['cur_topic_starter'] || $user_info['is_guest']))
		fatal_lang_error('not_a_topic', false);]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		// Attachments don't require the entire theme to be loaded.
		loadTheme();
		header('Mobiquo_is_login:'.($GLOBALS['context']['user']['is_logged'] ? 'true' : 'false'));

		// Check if the user should be disallowed access.
		if (!in_array($request_name, array('get_config', 'login')))
			is_not_banned();

		// If we are in a topic and don't have permission to approve it then duck out now.
		if (!empty($topic) && empty($board_info['cur_topic_approved']) && !allowedTo('approve_posts') && ($user_info['id'] != $board_info['cur_topic_starter'] || $user_info['is_guest']))
			get_error('The topic is not approved');
	}
	else
	{
		// Attachments don't require the entire theme to be loaded.
		if (isset($_REQUEST['action']) && $_REQUEST['action'] == 'dlattach' && (!empty($modSettings['allow_guestAccess']) && $user_info['is_guest']))
			detectBrowser();
		// Load the current theme.  (note that ?theme=1 will also work, may be used for guest theming.)
		else
			loadTheme();

		// Check if the user should be disallowed access.
		is_not_banned();

		// If we are in a topic and don't have permission to approve it then duck out now.
		if (!empty($topic) && empty($board_info['cur_topic_approved']) && !allowedTo('approve_posts') && ($user_info['id'] != $board_info['cur_topic_starter'] || $user_info['is_guest']))
			fatal_lang_error('not_a_topic', false);
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Is the forum in maintenance mode? (doesn't apply to administrators.)
	if (!empty($maintenance) && !allowedTo('admin_forum'))
	{
		// You can only login.... otherwise, you're getting the "maintenance mode" display.
		if (isset($_REQUEST['action']) && ($_REQUEST['action'] == 'login2' || $_REQUEST['action'] == 'logout'))
		{
			require_once($sourcedir . '/LogInOut.php');
			return $_REQUEST['action'] == 'login2' ? 'Login2' : 'Logout';
		}
		// Don't even try it, sonny.
		else
		{
			require_once($sourcedir . '/Subs-Auth.php');
			return 'InMaintenance';
		}
	}
	// If guest access is off, a guest can only do one of the very few following actions.
	elseif (empty($modSettings['allow_guestAccess']) && $user_info['is_guest'] && (!isset($_REQUEST['action']) || !in_array($_REQUEST['action'], array('coppa', 'login', 'login2', 'register', 'register2', 'reminder', 'activate', 'help', 'smstats', 'mailq', 'verificationcode', 'openidreturn'))))
	{
		require_once($sourcedir . '/Subs-Auth.php');
		return 'KickGuest';
	}
	elseif (empty($_REQUEST['action']))
	{
		// Action and board are both empty... BoardIndex!
		if (empty($board) && empty($topic))
		{
			require_once($sourcedir . '/BoardIndex.php');
			return 'BoardIndex';
		}
		// Topic is empty, and action is empty.... MessageIndex!
		elseif (empty($topic))
		{
			require_once($sourcedir . '/MessageIndex.php');
			return 'MessageIndex';
		}
		// Board is not empty... topic is not empty... action is empty.. Display!
		else
		{
			require_once($sourcedir . '/Display.php');
			return 'Display';
		}
	}]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		 // Is the forum in maintenance mode? (doesn't apply to administrators.)
		if (!empty($maintenance) && !allowedTo('admin_forum'))
		{
			if ($request_name != 'get_config' && $request_name != 'login') {
				get_error($txt['maintain_mode_on']);
			}
		}
		// If guest access is off, a guest can only do one of the very few following actions.
		elseif ((empty($modSettings['allow_guestAccess']) || !$modSettings['tp_guestOkayEnabled']) && $user_info['is_guest'] && (!isset($_REQUEST['action']) || !in_array($_REQUEST['action'], array('coppa', 'login', 'login2', 'register', 'register2', 'reminder', 'activate', 'help', 'smstats', 'mailq', 'verificationcode', 'openidreturn',))))
		{
			if ($request_name != 'get_config') {
				loadLanguage('Login');
				get_error($txt['only_members_can_access']);
				//require_once($sourcedir . '/Subs-Auth.php');
				//return 'KickGuest';
			} else {
				$modSettings['tp_guestOkayEnabled'] = 0;
			}
		}

		//-------------transform input data to local character set if needed
		utf8_to_local();
		//-------------change some setting for tapatalk display
		$settings['message_index_preview'] = 1;
		$modSettings['todayMod_bak'] = $modSettings['todayMod'];
		$modSettings['todayMod'] = 0;
		$user_settings['pm_prefs'] = 0;
		$user_info['user_time_format'] = $user_info['time_format'];
		$user_info['time_format'] = '%Y%m%dT%H:%M:%S+00:00';
		$modSettings['disableCustomPerPage'] = 1;
		$modSettings['disableCheckUA'] = 1;
		$modSettings['defaultMaxMessages'] = isset($limit_num) ? $limit_num : 20;
		$modSettings['defaultMaxMembers'] = 100;
		$modSettings['search_results_per_page'] = isset($topic_per_page) && $topic_per_page > 0 ? $topic_per_page : 20;
		$modSettings['defaultMaxTopics'] = isset($topic_per_page) && $topic_per_page > 0 ? $topic_per_page : 20;
		$modSettings['disable_pm_verification'] = $mobiquo_config['disable_pm_verification'];
		//-------------do something before action--------------

		if (function_exists('before_action_'.$request_name))
			call_user_func('before_action_'.$request_name);
		if (empty($_REQUEST['action']) && !empty($board))
		{
			if (empty($topic))
			{
				require_once($sourcedir . '/MessageIndex.php');
				return 'MessageIndex';
			}
			// Board is not empty... topic is not empty... action is empty.. Display!
			else
			{
				require_once($sourcedir . '/Display.php');
				return 'Display';
			}
		}
	}
	else
	{
		// Is the forum in maintenance mode? (doesn't apply to administrators.)
		if (!empty($maintenance) && !allowedTo('admin_forum'))
		{
			// You can only login.... otherwise, you're getting the "maintenance mode" display.
			if (isset($_REQUEST['action']) && ($_REQUEST['action'] == 'login2' || $_REQUEST['action'] == 'logout'))
			{
				require_once($sourcedir . '/LogInOut.php');
				return $_REQUEST['action'] == 'login2' ? 'Login2' : 'Logout';
			}
			// Don't even try it, sonny.
			else
			{
				require_once($sourcedir . '/Subs-Auth.php');
				return 'InMaintenance';
			}
		}
		// If guest access is off, a guest can only do one of the very few following actions.
		elseif (empty($modSettings['allow_guestAccess']) && $user_info['is_guest'] && (!isset($_REQUEST['action']) || !in_array($_REQUEST['action'], array('coppa', 'login', 'login2', 'register', 'register2', 'reminder', 'activate', 'help', 'smstats', 'mailq', 'verificationcode', 'openidreturn'))))
		{
			require_once($sourcedir . '/Subs-Auth.php');
			return 'KickGuest';
		}
		elseif (empty($_REQUEST['action']))
		{
			// Action and board are both empty... BoardIndex!
			if (empty($board) && empty($topic))
			{
				require_once($sourcedir . '/BoardIndex.php');
				return 'BoardIndex';
			}
			// Topic is empty, and action is empty.... MessageIndex!
			elseif (empty($topic))
			{
				require_once($sourcedir . '/MessageIndex.php');
				return 'MessageIndex';
			}
			// Board is not empty... topic is not empty... action is empty.. Display!
			else
			{
				require_once($sourcedir . '/Display.php');
				return 'Display';
			}
		}
	}]]></add>
		</operation>

		<operation>
			<search position="replace"><![CDATA[	// Get the function and file to include - if it's not there, do the board index.
	if (!isset($_REQUEST['action']) || !isset($actionArray[$_REQUEST['action']]))
	{
		// Catch the action with the theme?
		if (!empty($settings['catch_action']))
		{
			require_once($sourcedir . '/Themes.php');
			return 'WrapAction';
		}

		// Fall through to the board index then...
		require_once($sourcedir . '/BoardIndex.php');
		return 'BoardIndex';
	}

	// Otherwise, it was set - so let's go to that action.
	require_once($sourcedir . '/' . $actionArray[$_REQUEST['action']][0]);
	return $actionArray[$_REQUEST['action']][1];]]></search>
			<add><![CDATA[	if (defined('IN_MOBIQUO'))
	{
		 // Get the function and file to include - if it's not there, do the board index.
		if (!isset($_REQUEST['action']) || !isset($actionArray[$_REQUEST['action']]))
		{
			if (function_exists('action_'.$request_name))
				return 'action_'.$request_name;
			else
				get_error('Invalid action');
		}
		require_once($sourcedir . '/' . $actionArray[$_REQUEST['action']][0]);
		return $actionArray[$_REQUEST['action']][1];
	}
	else
	{
		// Get the function and file to include - if it's not there, do the board index.
		if (!isset($_REQUEST['action']) || !isset($actionArray[$_REQUEST['action']]))
		{
			// Catch the action with the theme?
			if (!empty($settings['catch_action']))
			{
				require_once($sourcedir . '/Themes.php');
				return 'WrapAction';
			}

			// Fall through to the board index then...
			require_once($sourcedir . '/BoardIndex.php');
			return 'BoardIndex';
		}

		// Otherwise, it was set - so let's go to that action.
		require_once($sourcedir . '/' . $actionArray[$_REQUEST['action']][0]);
		return $actionArray[$_REQUEST['action']][1];
	}]]></add>
		</operation>


	</file>
</modification>
